<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.18.1: http://docutils.sourceforge.net/" />

    <title>modelo module</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="module-modelo">
<span id="modelo-module"></span><h1>modelo module</h1>
<dl class="py class">
<dt class="sig sig-object py" id="modelo.Modelo">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-prename descclassname"><span class="pre">modelo.</span></span><span class="sig-name descname"><span class="pre">Modelo</span></span></dt>
<dd><p>Bases: <a class="reference internal" href="observador.xhtml#observador.Subject" title="observador.Subject"><code class="xref py py-class docutils literal notranslate"><span class="pre">Subject</span></code></a></p>
<p>Clase Modelo.
Hereda de Subject.</p>
<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.actualtabla">
<span class="sig-name descname"><span class="pre">actualtabla</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">tree</span></span></em><span class="sig-paren">)</span></dt>
<dd><p>Método de actualización del Treeview.</p>
<p>Nos permite actualizar los datos que se muestran en el Treeview
tomando los registros desde la base de datos.</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd">tree(_Treeview)<span class="colon">:</span></dt>
<dd class="field-odd"><p>Objeto del Treeview.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.ayuda">
<span class="sig-name descname"><span class="pre">ayuda</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id1"><span class="problematic" id="id2">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.borrar">
<span class="sig-name descname"><span class="pre">borrar</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id3"><span class="problematic" id="id4">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.camposdel">
<span class="sig-name descname"><span class="pre">camposdel</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id5"><span class="problematic" id="id6">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.consultar">
<span class="sig-name descname"><span class="pre">consultar</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id7"><span class="problematic" id="id8">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.datos_stats">
<span class="sig-name descname"><span class="pre">datos_stats</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd></dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.devolver">
<span class="sig-name descname"><span class="pre">devolver</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id9"><span class="problematic" id="id10">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.ingresar">
<span class="sig-name descname"><span class="pre">ingresar</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id11"><span class="problematic" id="id12">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.modificar">
<span class="sig-name descname"><span class="pre">modificar</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id13"><span class="problematic" id="id14">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.obtdicc">
<span class="sig-name descname"><span class="pre">obtdicc</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Método Obtención diccionario.</p>
<p>Nos permite obtener los registros de la base de datos 
en formato de diccionario.</p>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.obtprod">
<span class="sig-name descname"><span class="pre">obtprod</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id15"><span class="problematic" id="id16">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.seleccionlist">
<span class="sig-name descname"><span class="pre">seleccionlist</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id17"><span class="problematic" id="id18">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="modelo.Modelo.totalinfor">
<span class="sig-name descname"><span class="pre">totalinfor</span></span><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Función de envoltura</p>
<dl class="simple">
<dt>Args:</dt><dd><dl class="field-list simple">
<dt class="field-odd"><a href="#id19"><span class="problematic" id="id20">*</span></a>args<span class="colon">:</span></dt>
<dd class="field-odd"><p>Argumentos del método sobre el cual se aplica la función
(list): Lista de argumentos</p>
</dd>
</dl>
</dd>
<dt>Returns:</dt><dd><p>:la devolución dependerá del método sobre el cual se aplica el decorador</p>
</dd>
</dl>
</dd></dl>

</dd></dl>

</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>